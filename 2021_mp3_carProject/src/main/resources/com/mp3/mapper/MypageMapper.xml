<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.mp3.mapper.MypageMapper">

	<!-- Oracle 쿼리 -->
	
	<!-- 게시글 목록(리스트) -->
  	<select id="getList" resultType="com.mp3.domain.MemberVO">
  	<!-- XML구문이 아니고 쿼리문임을 표시 -->
  	<![CDATA[	
		select * from member where member_no>0
	]]>
  	</select>
  	
  	
  	<!-- 회원번호로 회원 정보 보기 -->
  	<select id="myInfoRead" resultType="com.mp3.domain.MemberVO">
  		select * from member where member_no =#{member_no}
  	</select>
  	
  	
  	<!-- car_no 로 회원 차 정보 보기 -->
  	<select id="myInfoCar" resultType="com.mp3.domain.CarVO">
  		select * from car where car_no =#{car_no}
  	</select>
  	
  	
  	
<!-- 	탈퇴하기 비밀번호 확인 쿼리 -->
<!-- 	<select id="myInfoDeletePassCheck" resultType="com.mp3.domain.MemberVO"> -->
<!--   		select member_pass from member where member_no = #{member_no} -->
<!--   	</select> -->
  	
  	
  	<!-- 회원정보로 회원 탈퇴 -->
   <delete id="myInfoDelete_auth">		
  	  	<![CDATA[	 delete from member_auth where member_id = (select member_id from MEMBER where member_no=#{member_no})]]>
   </delete> 
   <delete id="myInfoDelete_member">		
  	  		<![CDATA[	 delete from member where member_no =#{member_no}]]>
   </delete>
  	
  	
<!--   	회원정보 수정 -->
  	
  	<update id="myInfoUpdatePassCheck">
		<![CDATA[
		UPDATE member SET member_name = #{member_name}, member_gender = #{member_gender},
		member_phone = #{member_phone}, member_address = #{member_address},
		member_mail = #{member_mail}, member_mailaccept = #{member_mailaccept}
		WHERE member_no = #{member_no} ]]>
	</update>
  	
  	
  	<!-- 회원탈퇴시 아이디로 비밀번호 체크 Test  	 -->
	 <select id="passID" resultType="String">
		SELECT member_pass FROM MEMBER
		WHERE member_id = #{member_id}
	</select> 	
  	
  	
  	
  	
<!-- 비밀번호 체크 Test  	 -->
	 <select id="passChk" resultType="int">
		SELECT COUNT(*) FROM MEMBER
		WHERE member_id = #{member_id}
		  AND member_pass = #{member_pass}
	</select> 	
  	
  	
  	
  	
  	<!-- 회원가입 쿼리  -->
  	
<!--   	<insert id="insert">
  		<selectKey keyProperty="member_no" order="BEFORE" resultType="integer">
  			select seq_member.nextval from dual
  		</selectKey>
  		
  		INSERT INTO MEMBER (member_no, member_id, member_pass, member_name, member_gender, member_birth, member_phone, member_address, member_mail, member_mailaccept) 
		VALUES (seq_member.nextval, #{member_id}, #{member_pass},
		 #{member_name}, #{member_gender}, #{member_birth}, #{member_phone}, #{member_address}, #{member_mail}, #{member_mailaccept})
		
		
  	</insert> -->
  	
  	
  	
  	
  	
  	
  	<!-- 아래는 교재 예제 -->
  	
  	<!-- 게시글 등록1 - insert 처리 -->
  	<!-- <insert id="insert">
	  	INSERT INTO tbl_board (bno, title, content, writer) 
		VALUES (seq_board.nextval, #{title}, #{content}, #{writer})
  	</insert> -->
  	
  	<!-- 게시글 등록2 - @SelectKey 사용 (자동으로 추가되는 PK 값 확인) -->
  	<!-- <insert id="insertSelectKey">
  		<selectKey keyProperty="bno" order="BEFORE" resultType="long">
  			select seq_board.nextval from dual
  		</selectKey>
  		
	  	INSERT INTO tbl_board (bno, title, content, writer) 
		VALUES (#{bno}, #{title}, #{content}, #{writer})
  	</insert> -->
  	
	<!-- 게시글 조회 (한 행) - read (select) 처리 -->
  	<!-- <select id="read" resultType="org.zerock.domain.BoardVO">
		select * from tbl_board where bno = #{bno}
  	</select> -->
  	
	<!-- 게시글 삭제 - delete 처리 -->
  	<!-- <delete id="delete">
		delete from tbl_board where bno = #{bno}
  	</delete> -->
  	
  	<!-- 게시글 수정 - update 처리 -->
  	<!-- <update id="update">
  		update tbl_board
  		set title= #{title}, content = #{content}, writer = #{writer}, updateDate = sysdate
  		where bno = #{bno}
  	</update> -->
  	
  	<!-- 문제1) 게시글 삭제 개수 -->
  	<!-- <select id="deleteNum" resultType="integer">
		select max(bno)-count(*) as deletecount from tbl_board
  	</select> -->
  	
	<!-- 문제2) 작성자의 총 작성글 개수 -->
  	<!-- <select id="writeNum" resultType="integer">
		select count(*) from tbl_board where writer= #{writer}
  	</select> -->
  	
  	
  	
</mapper>